{"version":3,"sources":["components/Cell.js","components/Board.js","App.js","index.js"],"names":["Cell","row","col","val","onClick","className","defaultProps","Board","props","setDraw","setState","isStart","winner","isDraw","resultModal","setWinner","player","onCellClick","state","board","xIsNext","cloneBoard","hasWinner","isTerminated","isFull","endGame","renderBoard","map","iRow","key","cell","iCell","size","resetGame","Array","fill","el","Math","random","open","toggleConfirm","toggleResultModal","showResultModal","Modal","Content","Description","Fragment","Actions","Button","positive","content","checkingHorizontal","competitorPlayer","numToWin","pStart","pEnd","diff","isBlockOutAbove","isBlockOutBelow","checkingVertical","checkingMainDiagonal","checkingSubDiagonal","every","isLoading","setTimeout","this","symbol","Loader","active","primary","Confirm","onCancel","onConfirm","header","id","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1baad5cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cell = ({ row, col, val, onClick }) => {\r\n  return (\r\n    <button\r\n      className={`board-cell player${val ? ' ' + val : ''}`}\r\n      onClick={() => onClick(row, col)}\r\n    >{val}</button>\r\n  );\r\n};\r\n\r\nCell.defaultProps = {\r\n  val: null\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport Cell from './Cell';\r\nimport { Button, Confirm, Loader, Modal } from 'semantic-ui-react';\r\n\r\nclass Board extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      board: new Array(props.size).fill(null).map(el => new Array(props.size).fill(null)),\r\n      xIsNext: Math.random() >= 0.5,\r\n      isStart: true,\r\n      winner: null,\r\n      isDraw: false,\r\n      isLoading: true,\r\n      open: false,\r\n      resultModal: false\r\n    }\r\n  }\r\n\r\n  setDraw = () => {\r\n    this.setState({\r\n      isStart: false,\r\n      winner: 'XO',\r\n      isDraw: true,\r\n      resultModal: true\r\n    });\r\n  }\r\n\r\n  setWinner = (player) => {\r\n    this.setState({\r\n      isStart: false,\r\n      winner: player,\r\n      isDraw: false,\r\n      resultModal: true\r\n    });\r\n  }\r\n\r\n  onCellClick = (row, col) => {\r\n\r\n    const { isStart, winner, board, xIsNext } = this.state;\r\n\r\n    if (!isStart || winner || board[row][col])\r\n      return;\r\n\r\n    let cloneBoard = board;\r\n    cloneBoard[row][col] = xIsNext ? 'X' : 'O';\r\n\r\n    this.setState({\r\n      board: cloneBoard,\r\n      xIsNext: !this.state.xIsNext\r\n    }, () => {\r\n\r\n      let player = this.state.board[row][col];\r\n\r\n      const hasWinner = this.isTerminated(row, col, player);\r\n      // draw\r\n      if (this.isFull() && !hasWinner) {\r\n        return this.setDraw();\r\n      }\r\n      if (hasWinner) {\r\n        return this.endGame(player);\r\n      }\r\n    })\r\n  }\r\n\r\n  renderBoard = () => {\r\n    return (\r\n      this.state.board.map((row, iRow) => {\r\n\r\n        return (\r\n          <div key={iRow} className='board-row'>\r\n            {\r\n              row.map((cell, iCell) => (\r\n                <Cell\r\n                  key={iRow * this.props.size + iCell}\r\n                  row={iRow}\r\n                  col={iCell}\r\n                  val={cell}\r\n                  onClick={(row, col) => this.onCellClick(row, col)} />\r\n              ))\r\n            }\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n    }, 200 + Math.random() * 1000);\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.setState({\r\n      board: new Array(this.props.size).fill(null).map(el => new Array(this.props.size).fill(null)),\r\n      xIsNext: Math.random() >= 0.5,\r\n      isStart: true,\r\n      winner: null,\r\n      open: false,\r\n      resultModal: false\r\n    })\r\n  }\r\n\r\n  toggleConfirm = () => {\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n  }\r\n\r\n  toggleResultModal = () => {\r\n    this.setState({\r\n      resultModal: !this.state.resultModal\r\n    });\r\n  }\r\n\r\n  showResultModal = () => {\r\n\r\n    const { winner, resultModal, isDraw } = this.state;\r\n\r\n    const showResult = () => {\r\n      if (isDraw) {\r\n        return (\r\n          <React.Fragment>\r\n            <div className={`text-center result player draw`}>{winner}</div>\r\n            <div className='text-center'>Draw</div>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <div className={`text-center result player${' ' + winner}`}>{winner}</div>\r\n          <div className='text-center'>Winner</div>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Modal open={resultModal} size='mini'>\r\n        <Modal.Content>\r\n          <Modal.Description className='result-wrapper'>\r\n            {showResult()}\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions className='text-center'>\r\n          <Button\r\n            onClick={this.resetGame}\r\n            positive\r\n            content='Play again'\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n    const { isLoading, xIsNext, open } = this.state;\r\n\r\n    const symbol = xIsNext ? 'X' : 'O';\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <Loader active size='large'>Loading</Loader>\r\n      )\r\n    }\r\n    return (\r\n      <div className='board-wrapper'>\r\n        <div className='game-info-wrapper'>\r\n          <h3 className='title'>Tic-Tac-Toe</h3>\r\n          <div className='game-info'>\r\n            <p>Player: &nbsp;\r\n              <span className={`player${' ' + symbol}`}>\r\n                {symbol}\r\n              </span>\r\n            </p>\r\n\r\n            <Button primary onClick={() => this.toggleConfirm()}>Reset</Button>\r\n\r\n            <Confirm\r\n              open={open}\r\n              size='mini'\r\n              onCancel={this.toggleConfirm}\r\n              onConfirm={this.resetGame}\r\n              header='Confirm'\r\n              content='Do you want to reset this game?'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div id='board'>\r\n          {this.renderBoard()}\r\n        </div>\r\n\r\n        {this.showResultModal()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // giai thuat kiem tra chien thang\r\n\r\n\r\n  checkingHorizontal = (row, col, player) => {\r\n\r\n    const competitorPlayer = player === 'X' ? 'O' : 'X';\r\n\r\n    const { board } = this.state, { size, numToWin } = this.props;\r\n\r\n    let pStart = { row , col }, pEnd = { row , col };\r\n\r\n    while (pStart.col >= 0 && board[row][pStart.col] === player) {\r\n      --pStart.col;\r\n    }\r\n    while (pEnd.col < size && board[row][pEnd.col] === player) {\r\n      ++pEnd.col;\r\n    }\r\n\r\n    ++pStart.col;\r\n    --pEnd.col;\r\n\r\n    // đã có điểm đầu tiên [row, pStart.col] và điểm cuối [row, pEnd.col]\r\n\r\n    const diff = pEnd.col - pStart.col + 1;\r\n\r\n    if (diff > numToWin) return true;\r\n\r\n    if (diff === numToWin) {\r\n      let isBlockOutAbove = false, isBlockOutBelow = false;\r\n\r\n      if (pStart.col > 0 && board[row][--pStart.col] === competitorPlayer) {\r\n        isBlockOutAbove = true;\r\n      }\r\n\r\n      if (pEnd.col < size - 1 && board[row][++pEnd.col] === competitorPlayer) {\r\n        isBlockOutBelow = true;\r\n      }\r\n\r\n      return !(isBlockOutAbove && isBlockOutBelow);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkingVertical = (row, col, player) => {\r\n    const competitorPlayer = player === 'X' ? 'O' : 'X';\r\n\r\n    const { board } = this.state, { size, numToWin } = this.props;\r\n\r\n    let pStart = { row , col }, pEnd = { row , col };\r\n\r\n    while (pStart.row >= 0 && board[pStart.row][col] === player) {\r\n      --pStart.row;\r\n    }\r\n    while (pEnd.row < size && board[pEnd.row][col] === player) {\r\n      ++pEnd.row;\r\n    }\r\n\r\n    ++pStart.row;\r\n    --pEnd.row;\r\n\r\n    // đã có điểm đầu tiên [pStart.row, col] và điểm cuối [pEnd.row, col]\r\n\r\n    const diff = pEnd.row - pStart.row + 1;\r\n\r\n    if (diff > numToWin) return true;\r\n    \r\n    if (diff === numToWin) {\r\n      \r\n      let isBlockOutAbove = false, isBlockOutBelow = false;\r\n\r\n      if (pStart.row > 0 && board[--pStart.row][col] === competitorPlayer) {\r\n        isBlockOutAbove = true;\r\n      }\r\n\r\n      if (pEnd.row < size - 1 && board[++pEnd.row][col] === competitorPlayer) {\r\n        isBlockOutBelow = true;\r\n      }\r\n\r\n      return !(isBlockOutAbove && isBlockOutBelow);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkingMainDiagonal = (row, col, player) => {\r\n    const competitorPlayer = player === 'X' ? 'O' : 'X';\r\n\r\n    const { board } = this.state, { size, numToWin } = this.props;\r\n\r\n    let pStart = { row , col }, pEnd = { row , col };\r\n\r\n    while (pStart.row >= 0 && pStart.col >= 0 && board[pStart.row][pStart.col] === player) {\r\n      --pStart.row;\r\n      --pStart.col;\r\n    }\r\n    while (pEnd.row < size && pEnd.col < size && board[pEnd.row][pEnd.col] === player) {\r\n      ++pEnd.row;\r\n      ++pEnd.col;\r\n    }\r\n    ++pStart.row;\r\n    ++pStart.col;\r\n\r\n    --pEnd.row;\r\n    --pEnd.col;\r\n\r\n    // đã có điểm đầu tiên [topRow, col] và điểm cuối [botRow, col]\r\n\r\n    const diff = pEnd.row - pStart.row + 1;\r\n\r\n    if (diff > numToWin) return true;\r\n\r\n    if (diff === numToWin) {\r\n\r\n      let isBlockOutAbove = false, isBlockOutBelow = false;\r\n\r\n      if (pStart.row > 0 && pStart.col > 0 && board[--pStart.row][--pStart.col] === competitorPlayer){\r\n        isBlockOutAbove = true;\r\n      }\r\n\r\n      if (pEnd.row < size - 1 && pEnd.col < size - 1 && board[++pEnd.row][++pEnd.col] === competitorPlayer) {\r\n        isBlockOutBelow = true;\r\n      }\r\n\r\n      return !(isBlockOutAbove && isBlockOutBelow)\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkingSubDiagonal = (row, col, player) => {\r\n    const competitorPlayer = player === 'X' ? 'O' : 'X';\r\n\r\n    const { board } = this.state, { size, numToWin } = this.props;\r\n\r\n    let pStart = { row , col }, pEnd = { row , col };\r\n\r\n    while (pStart.row >= 0 && pStart.col < size && board[pStart.row][pStart.col] === player) {\r\n      --pStart.row;\r\n      ++pStart.col;\r\n    }\r\n    while (pEnd.row < size && pEnd.col >= 0 && board[pEnd.row][pEnd.col] === player) {\r\n      ++pEnd.row;\r\n      --pEnd.col;\r\n    }\r\n    ++pStart.row;\r\n    --pStart.col;\r\n\r\n    --pEnd.row;\r\n    ++pEnd.col;\r\n\r\n\r\n    const diff = pEnd.row - pStart.row + 1;\r\n\r\n    if (diff > numToWin) return true;\r\n    \r\n    if (diff === numToWin) {\r\n\r\n      let isBlockOutAbove = false, isBlockOutBelow = false;\r\n\r\n      if (pStart.row > 0 && pStart.col < size - 1 && board[--pStart.row][++pStart.col] === competitorPlayer){\r\n        isBlockOutAbove = true;\r\n      }\r\n\r\n      if (pEnd.row < size - 1 && pEnd.col > 0 && board[++pEnd.row][--pEnd.col] === competitorPlayer){\r\n        isBlockOutBelow = true;\r\n      }\r\n\r\n      return !(isBlockOutAbove && isBlockOutBelow);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isTerminated = (row, col, player) => {\r\n    return this.checkingHorizontal(row, col, player) || this.checkingVertical(row, col, player)\r\n      || this.checkingMainDiagonal(row, col, player) || this.checkingSubDiagonal(row, col, player);\r\n  }\r\n\r\n  isFull = () => {\r\n    const { board } = this.state;\r\n\r\n    return board.every(row => {\r\n      return row.every(cell => cell);\r\n    });\r\n  }\r\n\r\n  endGame = (player) => {\r\n    this.setWinner(player);\r\n  }\r\n}\r\n\r\nBoard.defaultProps = {\r\n  size: 20,\r\n  numToWin: 5\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport './App.css';\r\nimport Board from './components/Board';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Board/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}